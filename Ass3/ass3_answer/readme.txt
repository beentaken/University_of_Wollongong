My code can run VS2015 and banshee. I have tested from size 5 to size 9. All of the matrix are read from the input.txt and create by command "new". In detail, my code create a mat by using a float array whose size is n * n. n is the dimension of the matrix in data file. Then my code also create a struct for each edge. This struct has 6 data members :  start vertice, end vertice, weight, 2 edge pointers(previous and next) and a flag(representing whether or not this edge is chosen).

PS : I wanted to read the data file name from the command line. But the banshee broke down since 8:20 pm 1/10/2016. So I haven't tested my code through a3compile and a3run. But my code run successfully banshee separately before it broke down.

Following is the command that you need to test my code:
g++ generateAdjM.cpp -o generateAdjM
g++ 803ass3.cpp -o out

Then generate a data file :
./generateAdjM 5

"5" is the size of graph. In other words, it is the number of vertices in this graph. You could modify it.

Then run my code with following command :
./out

You do not need to append the data file name "input.txt", because my code regard "input.txt" as the default data file name. If you want to read the data file name from command line, such as
./out input.txt

You need to annotate the line 71 and 72 of my code . Then unannotate the line 73 of my code. 

Besides, my code will generate 3 .txt file to store the MST generated by those three methods.
"output_mst_bf.txt" is the result of Brute Force.
"output_mst_pm.txt" is the result of Prim's algorithm based on matrix.
"output_mst_ph.txt" is the result of Prim's algorithm based on heap.